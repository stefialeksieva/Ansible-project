---
- name: Create EC2 Instances for Load Balancer and Application Servers
  hosts: localhost
  gather_facts: no
  vars_files:
    - /etc/ansible/vars/vars.yaml

  vars:
    instance_type: t2.micro
    instance_name: app-server1
    image: ami-019374baf467d6601
    wait: yes
    group: webserver
    region: eu-west-2
    lb: alb
    security_group: security-group-app-server1

  tasks:
    - name: Create a security group
      ec2_group:
        name: "{{ security_group }}"
        description: security-group-app-server1
        ec2_access_key: "{{ ec2_access_key }}"
        ec2_secret_key: "{{ ec2_secret_key }}"
        region: "{{ region }}"
        rules:
            - proto: tcp
              from_port: 22
              to_port: 22
              cidr_ip: "{{ ssh_access_ip }}"
            - proto: tcp
              from_port: 80
              to_port: 80
              cidr_ip: 0.0.0.0/0  # you could change it to be secure via specifing the HTTP access only from a specific IP range but I leave it from anywhere because I don't have internal network or trusted IP at the moment for the task  
            - proto: tcp
              from_port: 443
              to_port: 443
              cidr_ip: 0.0.0.0/0 # you could change it to be secure via specifing the HTTPS access only from a specific IP range but I leave it from anywhere because I don't have internal network or trusted IP at the moment for the task
            - proto: udp
              from_port: 53
              to_port: 53
              cidr_ip: 0.0.0.0/0 # Allow DNS traffic
        state: present
        tags:
          Name: sg-1

      register: sg
      delegate_to: localhost

    - name: Create a security group
      debug:
        msg: "Security Group created with ID: {{ sg.security_group_id }}

    - name: Provision Load Balancer (HAProxy) EC2 Instance
      ec2_instance:
        security_group: "{{ security_group }}"
        name: "{{ instance_name }}"
        ec2_access_key: "{{ ec2_access_key }}"
        ec2_secret_key: "{{ ec2_secret_key }}"
        instance_type: "{{ instance_type}}"
        image_id: "{{ image }}"
        region: "{{ region }}"
        count: 1
        wait: yes
        instance_tags:
          Name: load-balancer
        assign_public_ip: yes
      register: lb_instance

  - name: Provision Application Server 1 EC2 Instance
    ec2_instance:
        security_group: "{{ security_group }}"
        name: "{{ instance_name }}"
        ec2_access_key: "{{ ec2_access_key }}"
        ec2_secret_key: "{{ ec2_secret_key }}"
        instance_type: "{{ instance_type}}"
        image_id: "{{ image }}"
        region: "{{ region }}"
